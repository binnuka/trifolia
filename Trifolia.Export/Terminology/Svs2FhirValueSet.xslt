<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2014r2sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:ns0="urn:ihe:iti:svs:2008" exclude-result-prefixes="xs fn ns0">
  <xsl:output method="xml" encoding="UTF-8" byte-order-mark="no" indent="yes"/>
  <xsl:template match="/">
    <feed xmlns="http://www.w3.org/2005/Atom" xmlns:osr="http://a9.com/-/opensearch/extensions/relevance/1.0/" xmlns:os="http://a9.com/-/spec/opensearch/1.1/" xmlns:fhir="http://hl7.org/fhir" xmlns:at="http://purl.org/atompub/tombstones/1.0" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
      <xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'http://www.w3.org/2005/Atom C:/Users/Sean/Documents/Lantana/Code/TRIF/Trifolia.Generation/XML/fhir-all-xsd/fhir-atom-single.xsd'"/>
      <xsl:for-each select="ns0:RetrieveMultipleValueSetsResponse/ns0:DescribedValueSet">
        <xsl:variable name="var1_resultof_cast" as="xs:string" select="fn:string(@displayName)"/>
        <entry>
          <content>
            <xsl:attribute name="type" namespace="" select="'text/xml'"/>
            <xsl:variable name="var5_create_ValueSet" as="node()">
              <ValueSet xmlns="http://hl7.org/fhir" xmlns:osr="http://a9.com/-/opensearch/extensions/relevance/1.0/" xmlns:os="http://a9.com/-/spec/opensearch/1.1/" xmlns:at="http://purl.org/atompub/tombstones/1.0" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:atom="http://www.w3.org/2005/Atom">
                <identifier>
                  <xsl:attribute name="value" namespace="" select="fn:string(@ID)"/>
                </identifier>
                <version>
                  <xsl:sequence select="()"/>
                </version>
                <name>
                  <xsl:attribute name="value" namespace="" select="$var1_resultof_cast"/>
                </name>
                <description>
                  <xsl:attribute name="value" namespace="" select="$var1_resultof_cast"/>
                </description>
                <status>
                  <xsl:attribute name="value" namespace="" select="'active'"/>
                </status>
                <expansion>
                  <timestamp>
                    <xsl:attribute name="value" namespace="" select="xs:string(fn:current-dateTime())"/>
                  </timestamp>
                  <xsl:for-each select="ns0:ConceptList/ns0:Concept">
                    <xsl:variable name="var2_displayName" as="node()?" select="@displayName"/>
                    <xsl:variable name="var3_codeSystem" as="node()?" select="@codeSystem"/>
                    <xsl:variable name="var4_code" as="node()?" select="@code"/>
                    <contains>
                      <system>
                        <xsl:if test="fn:exists($var3_codeSystem)">
                          <xsl:attribute name="value" namespace="" select="xs:string(xs:anyURI(fn:string($var3_codeSystem)))"/>
                        </xsl:if>
                      </system>
                      <code>
                        <xsl:if test="fn:exists($var4_code)">
                          <xsl:attribute name="value" namespace="" select="fn:string($var4_code)"/>
                        </xsl:if>
                      </code>
                      <display>
                        <xsl:if test="fn:exists($var2_displayName)">
                          <xsl:attribute name="value" namespace="" select="fn:string($var2_displayName)"/>
                        </xsl:if>
                      </display>
                    </contains>
                  </xsl:for-each>
                </expansion>
              </ValueSet>
            </xsl:variable>
            <fhir:ValueSet>
              <xsl:sequence select="($var5_create_ValueSet/@node(), $var5_create_ValueSet/node())"/>
            </fhir:ValueSet>
          </content>
        </entry>
      </xsl:for-each>
    </feed>
  </xsl:template>
</xsl:stylesheet>
